name: Build xmrig

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build_win:
    name: Build Windows artifacts
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@master
      - name: Checkout deps
        run: git clone https://github.com/xmrig/xmrig-deps.git
      - name: Build project on Windows
        run: |
          cmake . -G "MinGW Makefiles" -DXMRIG_DEPS=xmrig-deps\gcc\x64
          make -j2
          copy src\config.json .
          copy bin\WinRing0\WinRing0x64.sys .
          7z a -tzip -mx windows_build.zip xmrig.exe config.json WinRing0x64.sys

      - name: Upload Windows build artifacts
        uses: actions/upload-artifact@v1
        with:
          name: windows_build
          path: windows_build.zip

      - name: Create Draft Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.head_ref }}
          release_name: ${{ github.head_ref }}
          draft: true
          prerelease: false

      - uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./windows_build.zip
          asset_name: windows_build.zip
          asset_content_type: application/zip

      - uses: eregon/publish-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_id: ${{ steps.create_release.outputs.id }}

  build_lin:
    name: Build Ubuntu artifacts
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y git build-essential cmake libuv1-dev libssl-dev libhwloc-dev automake libtool autoconf

      - name: Build
        run: |
          mkdir build && cd scripts
          ./build_deps.sh && cd ../build
          cmake .. -DXMRIG_DEPS=../scripts/deps -DBUILD_STATIC=ON
          make -j$(nproc)
          tar cfz ubuntu_build.tar.gz xmrig

      - name: Upload Ubuntu build artifacts
        uses: actions/upload-artifact@v1
        with:
          name: ubuntu_build
          path: ./build/ubuntu_build.tar.gz

  build_minerstat:
    runs-on: ubuntu-latest
    container: centos:7
    steps:
      - name: Prepare CentOS 7 tools
        run: |
          yum install -y centos-release-scl epel-release
          yum install -y devtoolset-9
          yum install -y wget git cmake3 automake libtool autoconf libstdc++-static glibc-static

      - uses: actions/checkout@v2

      - name: Build project on CentOS 7
        run: |
          source /opt/rh/devtoolset-9/enable
          cd scripts
          ./build_deps.sh
          cd ..
          cmake3 . -DXMRIG_DEPS=scripts/deps
          make -j$(nproc)
          tar cfz minerstat_build.tar.gz xmrig

      - name: Upload CentOS 7 build artifacts
        uses: actions/upload-artifact@v1
        with:
          name: minerstat_build
          path: minerstat_build.tar.gz
